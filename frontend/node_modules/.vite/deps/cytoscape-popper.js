import {
  init_lib,
  lib_exports
} from "./chunk-VQKHOEBP.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-V4OQ3NZ2.js";

// node_modules/cytoscape-popper/cytoscape-popper.js
var require_cytoscape_popper = __commonJS({
  "node_modules/cytoscape-popper/cytoscape-popper.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory((init_lib(), __toCommonJS(lib_exports)));
      else if (typeof define === "function" && define.amd)
        define(["@popperjs/core"], factory);
      else if (typeof exports === "object")
        exports["cytoscapePopper"] = factory((init_lib(), __toCommonJS(lib_exports)));
      else
        root["cytoscapePopper"] = factory(root["Popper"]);
    })(exports, function(__WEBPACK_EXTERNAL_MODULE_8__) {
      return (
        /******/
        function(modules) {
          var installedModules = {};
          function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) {
              return installedModules[moduleId].exports;
            }
            var module2 = installedModules[moduleId] = {
              /******/
              i: moduleId,
              /******/
              l: false,
              /******/
              exports: {}
              /******/
            };
            modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
            module2.l = true;
            return module2.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.i = function(value) {
            return value;
          };
          __webpack_require__.d = function(exports2, name, getter) {
            if (!__webpack_require__.o(exports2, name)) {
              Object.defineProperty(exports2, name, {
                /******/
                configurable: false,
                /******/
                enumerable: true,
                /******/
                get: getter
                /******/
              });
            }
          };
          __webpack_require__.n = function(module2) {
            var getter = module2 && module2.__esModule ? (
              /******/
              function getDefault() {
                return module2["default"];
              }
            ) : (
              /******/
              function getModuleExports() {
                return module2;
              }
            );
            __webpack_require__.d(getter, "a", getter);
            return getter;
          };
          __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
          };
          __webpack_require__.p = "";
          return __webpack_require__(__webpack_require__.s = 7);
        }([
          /* 0 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            module2.exports = Object.assign != null ? Object.assign.bind(Object) : function(tgt) {
              for (var _len = arguments.length, srcs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                srcs[_key - 1] = arguments[_key];
              }
              srcs.forEach(function(src) {
                if (src !== null && src !== void 0) {
                  Object.keys(src).forEach(function(k) {
                    return tgt[k] = src[k];
                  });
                }
              });
              return tgt;
            };
          },
          /* 1 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            var _require = __webpack_require__(5), getBoundingBox = _require.getBoundingBox;
            function getRef(target, opts) {
              var refObject = {
                getBoundingClientRect: function getBoundingClientRect() {
                  return getBoundingBox(target, opts);
                }
              };
              return refObject;
            }
            module2.exports = { getRef };
          },
          /* 2 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            var assign = __webpack_require__(0);
            var _require = __webpack_require__(1), getRef = _require.getRef;
            var _require2 = __webpack_require__(6), getContent = _require2.getContent;
            var popperDefaults = {};
            var _require3 = __webpack_require__(8), createPopper = _require3.createPopper;
            function getPopper(target, opts) {
              var refObject = getRef(target, opts);
              var content = getContent(target, opts.content);
              var popperOpts = assign({}, popperDefaults, opts.popper);
              return createPopper(refObject, content, popperOpts);
            }
            module2.exports = { getPopper };
          },
          /* 3 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            var assign = __webpack_require__(0);
            var _require = __webpack_require__(2), getPopper = _require.getPopper;
            var _require2 = __webpack_require__(1), getRef = _require2.getRef;
            function popper(opts) {
              checkForWarning(this);
              return getPopper(this[0], createOptionsObject(this[0], opts));
            }
            function popperRef(opts) {
              checkForWarning(this);
              return getRef(this[0], createOptionsObject(this[0], opts));
            }
            function createOptionsObject(target, opts) {
              var renderedDimensions = function renderedDimensions2(el) {
                return el.isNode() ? { w: el.renderedWidth(), h: el.renderedHeight() } : { w: 3, h: 3 };
              };
              var renderedPosition = function renderedPosition2(el) {
                return el.isNode() ? getRenderedCenter(el, renderedDimensions) : getRenderedMidpoint(el);
              };
              var popper2 = {};
              var cy = target.cy();
              var defaults = { renderedDimensions, renderedPosition, popper: popper2, cy };
              return assign({}, defaults, opts);
            }
            function getRenderedCenter(target, renderedDimensions) {
              var pos = target.renderedPosition();
              var dimensions = renderedDimensions(target);
              var offsetX = dimensions.w / 2;
              var offsetY = dimensions.h / 2;
              return {
                x: pos.x - offsetX,
                y: pos.y - offsetY
              };
            }
            function getRenderedMidpoint(target) {
              var p = target.midpoint();
              var pan = target.cy().pan();
              var zoom = target.cy().zoom();
              return {
                x: p.x * zoom + pan.x,
                y: p.y * zoom + pan.y
              };
            }
            function checkForWarning(elements) {
              if (elements.length > 1) {
                console.warn("Popper.js Extension should only be used on one element.");
                console.warn("Ignoring all subsequent elements");
              }
            }
            module2.exports = { popper, popperRef };
          },
          /* 4 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            var assign = __webpack_require__(0);
            var _require = __webpack_require__(2), getPopper = _require.getPopper;
            var _require2 = __webpack_require__(1), getRef = _require2.getRef;
            function popper(opts) {
              return getPopper(this, createOptionsObject(this, opts));
            }
            function popperRef(opts) {
              return getRef(this, createOptionsObject(this, opts));
            }
            function createOptionsObject(target, opts) {
              var defaults = {
                boundingBox: {
                  top: 0,
                  left: 0,
                  right: 0,
                  bottom: 0,
                  w: 3,
                  h: 3
                },
                renderedDimensions: function renderedDimensions() {
                  return { w: 3, h: 3 };
                },
                renderedPosition: function renderedPosition() {
                  return { x: 0, y: 0 };
                },
                popper: {},
                cy: target
              };
              return assign({}, defaults, opts);
            }
            module2.exports = { popper, popperRef };
          },
          /* 5 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            function getBoundingBox(target, opts) {
              var renderedPosition = opts.renderedPosition, cy = opts.cy, renderedDimensions = opts.renderedDimensions;
              var offset = cy.container().getBoundingClientRect();
              var dims = renderedDimensions(target);
              var pos = renderedPosition(target);
              return {
                top: pos.y + offset.top,
                left: pos.x + offset.left,
                right: pos.x + dims.w + offset.left,
                bottom: pos.y + dims.h + offset.top,
                width: dims.w,
                height: dims.h
              };
            }
            module2.exports = { getBoundingBox };
          },
          /* 6 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            function getContent(target, content) {
              var contentObject = null;
              if (typeof content === "function") {
                contentObject = content(target);
              } else if (content instanceof HTMLElement) {
                return content;
              } else {
                throw new Error("Can not create popper from 'target' with unknown type");
              }
              if (contentObject === null) {
                throw new Error("No 'target' specified to create popper");
              } else {
                return contentObject;
              }
            }
            module2.exports = { getContent };
          },
          /* 7 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            var coreImpl = __webpack_require__(4);
            var collectionImpl = __webpack_require__(3);
            var register = function register2(cytoscape2) {
              if (!cytoscape2) {
                return;
              }
              cytoscape2("core", "popper", coreImpl.popper);
              cytoscape2("collection", "popper", collectionImpl.popper);
              cytoscape2("core", "popperRef", coreImpl.popperRef);
              cytoscape2("collection", "popperRef", collectionImpl.popperRef);
            };
            if (typeof cytoscape !== "undefined") {
              register(cytoscape);
            }
            module2.exports = register;
          },
          /* 8 */
          /***/
          function(module2, exports2) {
            module2.exports = __WEBPACK_EXTERNAL_MODULE_8__;
          }
          /******/
        ])
      );
    });
  }
});
export default require_cytoscape_popper();
//# sourceMappingURL=cytoscape-popper.js.map
